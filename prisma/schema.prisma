datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/prisma/client"
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String        @unique
  displayName String?
  avatarUrl   String
  website     String?
  phone       String?
  email       String        @unique
  description String?
  role        String        @default("guest") // "company", "alumni"
  verified    Boolean       @default(false)
  application Application[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("user")
}

model Application {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  jobId       String   @db.ObjectId
  companyId   String   @db.ObjectId
  status      String   @default("pending") // "pending", "reviewed", "accepted", "rejected"
  appliedAt   DateTime
  resumeId    String
  resumeUrl   String
  coverLetter String
  user        User     @relation(fields: [userId], references: [id])

  @@map("application")
}

model Company {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  logoUrl           String?
  categoryId        String           @db.ObjectId
  capital           Int?
  numberOfEmployees Int?
  website           String?
  phone             String?
  fax               String?
  address           String?
  email             String?
  description       String?
  jobs              Job[]
  CompanyCategory   CompanyCategory? @relation(fields: [categoryId], references: [id])

  @@map("company")
}

model Job {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  companyId         String  @db.ObjectId
  description       String
  categoryId        String  @db.ObjectId
  salaryMin         Int     @default(0)
  salaryMax         Int     @default(0)
  negotiable        Boolean
  employmentType    String  @default("full-time") // "part-time", "contract", "internship"
  location          String? // "remote", "on-site"
  management        String? // "yes", "no"
  businessTrip      String? // "yes", "no"
  workingHours      String?
  startDate         String?
  numberOfPositions Int?
  experience        String?
  education         String?
  major             String?
  language          String?
  skills            String?
  others            String?
  benefits          String?

  company  Company     @relation(fields: [companyId], references: [id])
  category JobCategory @relation(fields: [categoryId], references: [id])

  @@map("job")
}

model CompanyCategory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  companies Company[]

  @@map("company_category")
}

model JobCategory {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  jobs Job[]

  @@map("job_category")
}
